/*0C945C000C946E000C946E000C946E00C0C946E000C946E000C946E000C946E00A0C946E000C946E000C946E000C946E0090C946E000C946E000C946E000C946
0C945C000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E000C946E00


           0C945C000C946E000C946E000C946E00
hex.js:233 C0C946E000C946E000C946E000C946E0
hex.js:233 0A0C946E000C946E000C946E000C946E
hex.js:233 0090C946E000C946E000C946E000C946
hex.js:233 E0080C9488000C946E000C946E000C94
hex.js:233 6E0050C946E000C946E000C946E000C9
hex.js:233 46E0060C946E000C946E000000000800
hex.js:233 02010060003040700000000000000000
hex.js:233 10204086102040800102040810200102
hex.js:233 04081020004040404040404040202020
hex.js:233 20202030320303030300000000250028
hex.js:233 002B000000C0000240027002A0011241
hex.js:233 FBECFEFD8E04DEBFCDBF21E0A0E0B1E0
hex.js:233 01C01D92A930AB207E1F70E94F1010C9
hex.js:233 401020C940000B61E08DE00C94810160
hex.js:233 E08DE00E94BA01368EE73E080E090E00
hex.js:233 E94F50061E08DE040E94BA0168EE73E0
hex.js:233 80E090E00C94F50081F920F920FB60F9
hex.js:233 211242F933F938F9339F93AF93BF9380
hex.js:233 91010190910201A091A0301B09104013
hex.js:233 091000123E0230F2D37120F40196A11D
hex.js:233 B11D05C026E8230F0296DA11DB11D209
hex.js:233 3000180930101909302012A0930301B0
hex.js:233 9304018091050190910601DA0910701B
hex.js:233 09108010196A11DB11D8093C05019093
hex.js:233 0601A0930701B0930801BF916AF919F9
hex.js:233 18F913F912F910F900FBE0F9031F9018
hex.js:233 953FB7F89480910501909106013A0910
hex.js:233 701B091080126B5A89B05C02F3F619F0
hex.js:233 0196A11DB11D3FBF6627782F892F19A2
hex.js:233 F620F711D811D911D42E0660F771FD88
hex.js:233 1F991F4A95D1F70895CF92DF92EF921F
hex.js:233 F92CF93DF936B017C010E94D200EB015
hex.js:233 C114D104E104F10489F00E9400020E94
hex.js:233 AD2006C1B7D0B683E734090F381E0C81
hex.js:233 ADD108E108F108C851DC4FEACFDF91CF
hex.js:233 914FF90EF90DF90CF900895789484B58
hex.js:233 260184BD84B5816084BD85B5826085BD
hex.js:233 85B57816085BDEEE6F0E080818160808
hex.js:233 3E1E82F0E01082808182608083808181
hex.js:233 6080836E0E8F0E0808181608083E1EBF
hex.js:233 0E08081684608083E0EBF0E080818160
hex.js:233 8083EAE73F0E08081846080838081826
hex.js:233 080838081B8160808380818068808310
hex.js:233 92C10008957833081F028F4813099F08
hex.js:233 230A1F00895E8730A9F08830B9F08430
hex.js:233 D1F48091800078F7D03C0809180008F7
hex.js:233 7809380000895884B58F7702C084B58F
hex.js:233 7D84BD08958091DB0008F7703C08091B
hex.js:233 0008F7D8093B000F0895CF93DF9390E0
hex.js:233 FC01E458FF4F2491DFC01E057FF4F849
hex.js:233 1882349F190E0880F5991FFC01E255FF
hex.js:233 4FA591B4918C559F4F4FC01C591D4919
hex.js:233 FB7611108C0F8948C91C209582238C93
hex.js:233 888182230AC0623051F4EF8948C91322
hex.js:233 F309583238C938881822B5888304C0F8
hex.js:233 948C91822B8C939FBFDF917CF9108950
hex.js:233 F931F93CF93DF931F92CDB72DEB7282F
hex.js:233 30E0F901E859FF4F8491F901DE458FF4
hex.js:233 F1491F901E057FF4F04910023FC9F088
hex.js:233 2321F069830E9458016981E02FFF0E0E
hex.js:233 E0FFF1FEC55FF4FA591B4919FB7FF894
hex.js:233 8C91611103C01095812301C0812B98C9
hex.js:233 39FBF0F90DF91CF911F910F910895408
hex.js:233 950E941D010E94F0010E947000C0E06D
hex.js:233 0E00E9474002097E1F30E940000F9CF4
hex.js:233 0895F894FFCFFF



           0C945C000C946E000C946E000C946E00
hex.js:233 0C946E000C946E000C946E000C946E00
hex.js:233 0C9488000C946E000C946E000C946E00
hex.js:233 0C946E000C946E000C946E000C946E00
hex.js:233 0C946E000C946E000000000800020100
hex.js:233 00030407000000000000000001020408
hex.js:233 10204080010204081020010204081020
hex.js:233 04040404040404040202020202020303
hex.js:233 0303030300000000250028002B000000
hex.js:233 0000240027002A0011241FBECFEFD8E0
hex.js:233 DEBFCDBF21E0A0E0B1E001C01D92A930
hex.js:233 B207E1F70E94F1010C9401020C940000
hex.js:233 61E08DE00C94810160E08DE00E94BA01
hex.js:233 68EE73E080E090E00E94F50061E08DE0
hex.js:233 0E94BA0168EE73E080E090E00C94F500
hex.js:233 1F920F920FB60F9211242F933F938F93
hex.js:233 9F93AF93BF938091010190910201A091
hex.js:233 0301B09104013091000123E0230F2D37
hex.js:233 20F40196A11DB11D05C026E8230F0296
hex.js:233 A11DB11D209300018093010190930201
hex.js:233 A0930301B09304018091050190910601
hex.js:233 A0910701B09108010196A11DB11D8093
hex.js:233 050190930601A0930701B0930801BF91
hex.js:233 AF919F918F913F912F910F900FBE0F90
hex.js:233 1F9018953FB7F8948091050190910601
hex.js:233 A0910701B091080126B5A89B05C02F3F
hex.js:233 19F00196A11DB11D3FBF6627782F892F
hex.js:233 9A2F620F711D811D911D42E0660F771F
hex.js:233 881F991F4A95D1F70895CF92DF92EF92
hex.js:233 FF92CF93DF936B017C010E94D200EB01
hex.js:233 C114D104E104F10489F00E9400020E94
hex.js:233 D2006C1B7D0B683E734090F381E0C81A
hex.js:233 D108E108F108C851DC4FEACFDF91CF91
hex.js:233 FF90EF90DF90CF900895789484B58260
hex.js:233 84BD84B5816084BD85B5826085BD85B5
hex.js:233 816085BDEEE6F0E0808181608083E1E8
hex.js:233 F0E01082808182608083808181608083
hex.js:233 E0E8F0E0808181608083E1EBF0E08081
hex.js:233 84608083E0EBF0E0808181608083EAE7
hex.js:233 F0E08081846080838081826080838081
hex.js:233 816080838081806880831092C1000895
hex.js:233 833081F028F4813099F08230A1F00895
hex.js:233 8730A9F08830B9F08430D1F480918000
hex.js:233 8F7D03C0809180008F77809380000895
hex.js:233 84B58F7702C084B58F7D84BD08958091
hex.js:233 B0008F7703C08091B0008F7D8093B000
hex.js:233 0895CF93DF9390E0FC01E458FF4F2491
hex.js:233 FC01E057FF4F8491882349F190E0880F
hex.js:233 991FFC01E255FF4FA591B4918C559F4F
hex.js:233 FC01C591D4919FB7611108C0F8948C91
hex.js:233 209582238C93888182230AC0623051F4
hex.js:233 F8948C91322F309583238C938881822B
hex.js:233 888304C0F8948C91822B8C939FBFDF91
hex.js:233 CF9108950F931F93CF93DF931F92CDB7
hex.js:233 DEB7282F30E0F901E859FF4F8491F901
hex.js:233 E458FF4F1491F901E057FF4F04910023
hex.js:233 C9F0882321F069830E9458016981E02F
hex.js:233 F0E0EE0FFF1FEC55FF4FA591B4919FB7
hex.js:233 F8948C91611103C01095812301C0812B
hex.js:233 8C939FBF0F90DF91CF911F910F910895
hex.js:233 08950E941D010E94F0010E947000C0E0
hex.js:233 D0E00E9474002097E1F30E940000F9CF
hex.js:233 0895F894FFCF


var test_str = "\
:100000000C9434000C9446000C9446000C9446006A\n\
:100010000C9446000C9446000C9446000C94460048\n\
:100020000C9446000C9446000C9446000C94460038\n\
:100030000C9446000C9446000C9446000C94460028\n\
:100040000C945A000C9446000C9446000C94460004\n\
:100050000C9446000C9446000C9446000C94460008\n\
:100060000C9446000C94460011241FBECFEFD8E03C\n\
:10007000DEBFCDBF21E0A0E0B1E001C01D92A930FC\n\
:10008000B207E1F70E944B000C94DF000C940000D3\n\
:100090000895089508950E94A4000E944A000E94B5\n\
:1000A0004800C0E0D0E00E9449002097E1F30E94A0\n\
:1000B0000000F9CF1F920F920FB60F9211242F93C9\n\
:1000C0003F938F939F93AF93BF9380910101909142\n\
:1000D0000201A0910301B09104013091000123E0DD\n\
:1000E000230F2D3720F40196A11DB11D05C026E870\n\
:1000F000230F0296A11DB11D2093000180930101E1\n\
:1001000090930201A0930301B09304018091050133\n\
:1001100090910601A0910701B09108010196A11DDF\n\
:10012000B11D8093050190930601A0930701B09340\n\
:100130000801BF91AF919F918F913F912F910F90A7\n\
:100140000FBE0F901F901895789484B5826084BD7F\n\
:1001500084B5816084BD85B5826085BD85B58160CB\n\
:1001600085BDEEE6F0E0808181608083E1E8F0E02B\n\
:100170001082808182608083808181608083E0E85A\n\
:10018000F0E0808181608083E1EBF0E08081846039\n\
:100190008083E0EBF0E0808181608083EAE7F0E03B\n\
:1001A000808184608083808182608083808181609F\n\
:1001B00080838081806880831092C1000895F894C4\n\
:0201C000FFCF6F\n\
:00000001FF"


var down_blink = "\
         0C945C000C946E000C946E000C946E00\
:100000000C945C000C946E000C946E000C946E00CA\n\
        C0C946E000C946E000C946E000C946E0\
:100010000C946E000C946E000C946E000C946E00A8\n\
:100020000C946E000C946E000C946E000C946E0098\n\
:100030000C946E000C946E000C946E000C946E0088\n\
:100040000C9488000C946E000C946E000C946E005E\n\
:100050000C946E000C946E000C946E000C946E0068\n\
:100060000C946E000C946E00000000080002010069\n\
:100070000003040700000000000000000102040863\n\
:100080001020408001020408102001020408102002\n\
:10009000040404040404040402020202020203032E\n\
:1000A0000303030300000000250028002B000000CC\n\
:1000B0000000240027002A0011241FBECFEFD8E043\n\
:1000C000DEBFCDBF21E0A0E0B1E001C01D92A930AC\n\
:1000D000B207E1F70E94F1010C9401020C940000B8\n\
:1000E00061E08DE00C94810160E08DE00E94BA0136\n\
:1000F00068EE73E080E090E00E94F50061E08DE042\n\
:100100000E94BA0168EE73E080E090E00C94F50084\n\
:100110001F920F920FB60F9211242F933F938F933C\n\
:100120009F93AF93BF938091010190910201A091A1\n\
:100130000301B09104013091000123E0230F2D371A\n\
:1001400020F40196A11DB11D05C026E8230F0296DB\n\
:10015000A11DB11D20930001809301019093020124\n\
:10016000A0930301B09304018091050190910601D1\n\
:10017000A0910701B09108010196A11DB11D8093C6\n\
:10018000050190930601A0930701B0930801BF9168\n\
:10019000AF919F918F913F912F910F900FBE0F9034\n\
:1001A0001F9018953FB7F894809105019091060132\n\
:1001B000A0910701B091080126B5A89B05C02F3F6B\n\
:1001C00019F00196A11DB11D3FBF6627782F892F19\n\
:1001D0009A2F620F711D811D911D42E0660F771FDE\n\
:1001E000881F991F4A95D1F70895CF92DF92EF9219\n\
:1001F000FF92CF93DF936B017C010E94D200EB0151\n\
:10020000C114D104E104F10489F00E9400020E94AB\n\
:10021000D2006C1B7D0B683E734090F381E0C81ADE\n\
:10022000D108E108F108C851DC4FEACFDF91CF9146\n\
:10023000FF90EF90DF90CF900895789484B582601E\n\
:1002400084BD84B5816084BD85B5826085BD85B57A\n\
:10025000816085BDEEE6F0E0808181608083E1E829\n\
:10026000F0E0108280818260808380818160808361\n\
:10027000E0E8F0E0808181608083E1EBF0E0808164\n\
:1002800084608083E0EBF0E0808181608083EAE736\n\
:10029000F0E08081846080838081826080838081BF\n\
:1002A000816080838081806880831092C10008957E\n\
:1002B000833081F028F4813099F08230A1F00895E4\n\
:1002C0008730A9F08830B9F08430D1F48091800073\n\
:1002D0008F7D03C0809180008F7780938000089588\n\
:1002E00084B58F7702C084B58F7D84BD08958091D9\n\
:1002F000B0008F7703C08091B0008F7D8093B000F5\n\
:100300000895CF93DF9390E0FC01E458FF4F2491D0\n\
:10031000FC01E057FF4F8491882349F190E0880F5A\n\
:10032000991FFC01E255FF4FA591B4918C559F4F49\n\
:10033000FC01C591D4919FB7611108C0F8948C91CC\n\
:10034000209582238C93888182230AC0623051F4E5\n\
:10035000F8948C91322F309583238C938881822B53\n\
:10036000888304C0F8948C91822B8C939FBFDF917B\n\
:10037000CF9108950F931F93CF93DF931F92CDB723\n\
:10038000DEB7282F30E0F901E859FF4F8491F901D9\n\
:10039000E458FF4F1491F901E057FF4F04910023F7\n\
:1003A000C9F0882321F069830E9458016981E02FF8\n\
:1003B000F0E0EE0FFF1FEC55FF4FA591B4919FB7F2\n\
:1003C000F8948C91611103C01095812301C0812B99\n\
:1003D0008C939FBF0F90DF91CF911F910F91089544\n\
:1003E00008950E941D010E94F0010E947000C0E06B\n\
:1003F000D0E00E9474002097E1F30E940000F9CF42\n\
:060400000895F894FFCFFF\n\
:00000001FF"


var test_blink = "\
:100000000C945C000C946E000C946E000C946E00CA\n\
:100010000C946E000C946E000C946E000C946E00A8\n\
:100020000C946E000C946E000C946E000C946E0098\n\
:100030000C946E000C946E000C946E000C946E0088\n\
:100040000C9488000C946E000C946E000C946E005E\n\
:100050000C946E000C946E000C946E000C946E0068\n\
:100060000C946E000C946E00000000080002010069\n\
:100070000003040700000000000000000102040863\n\
:100080001020408001020408102001020408102002\n\
:10009000040404040404040402020202020203032E\n\
:1000A0000303030300000000250028002B000000CC\n\
:1000B0000000240027002A0011241FBECFEFD8E043\n\
:1000C000DEBFCDBF21E0A0E0B1E001C01D92A930AC\n\
:1000D000B207E1F70E9403020C9413020C94000093\n\
:1000E00061E08DE00C94930161E08DE00E94CC0111\n\
:1000F00068EE73E080E090E00E94F50060E08DE043\n\
:100100000E94CC0168EE73E080E090E00C94F50072\n\
:100110001F920F920FB60F9211242F933F938F933C\n\
:100120009F93AF93BF938091010190910201A091A1\n\
:100130000301B09104013091000123E0230F2D371A\n\
:1001400020F40196A11DB11D05C026E8230F0296DB\n\
:10015000A11DB11D20930001809301019093020124\n\
:10016000A0930301B09304018091050190910601D1\n\
:10017000A0910701B09108010196A11DB11D8093C6\n\
:10018000050190930601A0930701B0930801BF9168\n\
:10019000AF919F918F913F912F910F900FBE0F9034\n\
:1001A0001F9018953FB7F894809105019091060132\n\
:1001B000A0910701B091080126B5A89B05C02F3F6B\n\
:1001C00019F00196A11DB11D3FBF6627782F892F19\n\
:1001D0009A2F620F711D811D911D42E0660F771FDE\n\
:1001E000881F991F4A95D1F708958F929F92AF92D9\n\
:1001F000BF92CF92DF92EF92FF926B017C010E943F\n\
:10020000D2004B015C01C114D104E104F104F1F00E\n\
:100210000E9412020E94D200681979098A099B097A\n\
:10022000683E73408105910570F321E0C21AD10840\n\
:10023000E108F10888EE880E83E0981EA11CB11C2D\n\
:10024000C114D104E104F10429F7DDCFFF90EF9050\n\
:10025000DF90CF90BF90AF909F908F90089578944B\n\
:1002600084B5826084BD84B5816084BD85B58260BB\n\
:1002700085BD85B5816085BDEEE6F0E08081816059\n\
:100280008083E1E8F0E01082808182608083808159\n\
:1002900081608083E0E8F0E0808181608083E1EB31\n\
:1002A000F0E0808184608083E0EBF0E08081816019\n\
:1002B0008083EAE7F0E080818460808380818260CF\n\
:1002C00080838081816080838081806880831092B8\n\
:1002D000C1000895833081F028F4813099F0823094\n\
:1002E000A1F008958730A9F08830B9F08430D1F4B6\n\
:1002F000809180008F7D03C0809180008F778093F4\n\
:100300008000089584B58F7702C084B58F7D84BD49\n\
:1003100008958091B0008F7703C08091B0008F7DE9\n\
:100320008093B0000895CF93DF9390E0FC01E458F0\n\
:10033000FF4F2491FC01E057FF4F8491882349F13E\n\
:1003400090E0880F991FFC01E255FF4FA591B491F1\n\
:100350008C559F4FFC01C591D4919FB7611108C086\n\
:10036000F8948C91209582238C93888182230AC0F3\n\
:10037000623051F4F8948C91322F309583238C9312\n\
:100380008881822B888304C0F8948C91822B8C9373\n\
:100390009FBFDF91CF9108950F931F93CF93DF936A\n\
:1003A0001F92CDB7DEB7282F30E0F901E859FF4F93\n\
:1003B0008491F901E458FF4F1491F901E057FF4F80\n\
:1003C00004910023C9F0882321F069830E946A0107\n\
:1003D0006981E02FF0E0EE0FFF1FEC55FF4FA59174\n\
:1003E000B4919FB7F8948C91611103C0109581234B\n\
:1003F00001C0812B8C939FBF0F90DF91CF911F91F4\n\
:100400000F91089508950E942F010E9402020E94F8\n\
:100410007000C0E0D0E00E9474002097E1F30E94D9\n\
:0A0420000000F9CF0895F894FFCF13\n\
:00000001FF"

*/

var PAGE_SIZE = 128

var myHex = [];

function testHex(hex_) {

    
    if(!hex_ || hex_.length == 0){
        console.log("Can't opne file:");
        return;
    } else {

        
        // delete 13 bytes from last.
       hex_= hex_.substring(0, hex_.length - 13);
        
        // calc line number of data.
       var hexLines = Math.ceil(hex_.length/45);
        // calc unusedBytes.
       var unusedBytes = (45 - 32) * hexLines;
        // calc count of data.
       var pageCount = Math.round(Math.round(((hex_.length - unusedBytes)/2))/PAGE_SIZE);
        
        // Converte to binary data.
        for(var l = 0; l < hexLines; l++){
            var nowPos = 45 * l;
            for(var i = 9; i < 41; i+=2){
                if(nowPos + i < hex_.length - 4){
                    var msbByte = hex_[nowPos + i];
                    var lsbByte = hex_[nowPos + i + 1]
                    var strHex = msbByte + lsbByte;
                    myHex.push(strHex);
                }
            }
        }
        
        
        console.log("load hex size:" + hex_.length);
        console.log("use size:" + (hex_.length - unusedBytes));
        console.log("use hex size:" + myHex.length);
        console.log("page size:" + pageCount);
        
    }
};



function hex(){
    dataList=[];
    data="";
    originHexString="222";
    
    strTohex = function(str,n){
        if(!str || typeof str == 'undefine'){
            if(!this.originHexString||typeof this.originHexString == 'undefine')
            {
                return [];
            }
        }
        hex.prototype.dataList = d(lh(str,n));
        return  hex.prototype.dataList;
    }
}

var Hex = {
    originHexString:"",
    strTohex: function(str,n){
       return x(lh(str,n));
    }
}


//hex.prototype.strTohex = function(str){
//   }


//处理 hex文件生成对应 字符串数组

function lh(m,d){
    var l = (function f(e){ //hex 处理
             var t = [];
             var s = "";
             if(typeof e == "string" && e.length){
             t = e.split('\n');
             }
             for(var i=0; i<t.length-1; i++)
             {   var x = t[i].substring(9,t[i].length-3);
             s+=x;
             }
             return s;
             })(m);
    var t = [];  //补填数组最后一组
    console.log( "typeof "+(typeof d) +"lh"+ d);
    
    var i = 0;
    for( ; i < l.length; i+= 2*d){
        var str = l.substr(i,2*d);
        console.log(str);
        t.push(str);
    }
    var n = t[t.length - 1];
    if(n.length < 2*d){
        var b = "";
        for(var i = 0; i< (2*d - n.length);i++){
            b += 'F';
        }
        t[t.length - 1]+=b;
    }
    console.log(t);
    return t;
}

//十进制字符串数组生成 二进制数组
function x(l){
    var li = [];
    for(var i = 0; i<l.length; i++){
        li.push(s(l[i]));
    }
    return li;
}

// (十进制)字符串转 二进制.
function u(e) {
    for (var t = e, n = new Uint8Array(t.length), r = 0; r < t.length; ++r) n[r] = t.charCodeAt(r);
    return n.buffer
}

function s(e)  //十进制字符串转 数组
{
//    console.log("functon s(e)");
//  console.log(e)
    if(e.length %2 != 0)
    {
        console.log("data length error");
        return;
    }
    var n = new Uint8Array(e.length/2);
    for(var i = 0 ;i < e.length ; i += 2)
    {
        var str = e.substr(i,2);
        // console.log(str +"--->"+ parseInt(str,16));
        n[i/2] = parseInt(str,16);
    }
    return n.buffer;
    // return n;
};
